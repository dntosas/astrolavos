global:
  imageRegistry: ""
  imagePullSecrets: []

nameOverride: ""
fullnameOverride: "astrolavos"
commonLabels: {}
commonAnnotations: {}
podAnnotations: {}
podLabels: {}

## There are scenarios where operators will need to deploy Astrolavos
## pods on every node to increase chances of getting more accurate
## cluster-wide insights. Following option switches deployment type
## to be DaemonSet and support this.
deployAsDaemonSet: true

## @param revisionHistoryLimit The number of old history to retain to allow rollback
##
revisionHistoryLimit: 3
## @param replicaCount Number of Astrolavos replicas to deploy
##
replicaCount: 1

## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param hostNetwork Specify if host network should be enabled for Astrolavos pod
##
hostNetwork: false

config:
  enabled: true
  application:
    logLevel: INFO
  endpoints:
    - domain: "www.httpbin.org"
      interval: 10s
      https: true

image:
  registry: ghcr.io
  repository: dntosas/astrolavos
  tag: v0.5.0
  pullPolicy: Always
  pullSecrets: {}

extraArgs: {}
extraEnvVars:
  ASTROLAVOS_LOG_LEVEL: INFO

service:
  enabled: true
  type: ClusterIP
  annotations: {}
  ports:
    http: 3000
  nodePorts:
    http: ""
  extraPorts: []
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  loadBalancerSourceRanges: []
  sessionAffinity: None
  sessionAffinityConfig: {}

containerPorts:
  http: 3000

serviceAccount:
  create: true
  name: ""
  annotations: {}
  automountServiceAccountToken: false

autoscaling:
  enabled: true
  minReplicas: "2"
  maxReplicas: "5"
  targetCPU: 80
  targetMemory: 80

resources:
  limits:
     cpu: 100m
     memory: 256Mi
  requests:
     cpu: 50m
     memory: 64Mi

livenessProbe:
  enabled: true
  initialDelaySeconds: 1
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 1
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

## @param topologySpreadConstraints Topology Spread Constraints for pod assignment
## https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
## The value is evaluated as a template
##
topologySpreadConstraints: []
## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment. Evaluated as a template.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
schedulerName: ""

## @param updateStrategy.type The update strategy type to apply to the DaemonSet
## @param updateStrategy.rollingUpdate.maxUnavailable Maximum number of pods that may be made unavailable
##
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

## @param initContainers Extra init containers
##
initContainers: []
## @param minReadySeconds `minReadySeconds` to avoid killing pods before we are ready
##
minReadySeconds: 0
## @param priorityClassName Priority class assigned to the Pods
##
priorityClassName: ""
## @param terminationGracePeriodSeconds In seconds, time the given to the Node exporter pod needs to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""

## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  ## @param pdb.create Created a PodDisruptionBudget
  ##
  create: false
  ## @param pdb.minAvailable Min number of pods that must still be available after the eviction.
  ## You can specify an integer or a percentage by setting the value to a string representation of a percentage (eg. "50%"). It will be disabled if set to 0
  ##
  minAvailable: 1
  ## @param pdb.maxUnavailable Max number of pods that can be unavailable after the eviction.
  ## You can specify an integer or a percentage by setting the value to a string representation of a percentage (eg. "50%"). It will be disabled if set to 0
  ##
  maxUnavailable: 0

## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Node exporter pods' Security Context
## @param podSecurityContext.fsGroup Set Node exporter pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001

## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled Node exporter containers' Security Context
## @param containerSecurityContext.runAsUser Set Node exporter containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set Node exporter container's Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 65532
  runAsGroup: 65532
  runAsNonRoot: true
  capabilities:
    drop: ["ALL"]
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault

# Prometheus Service Monitor
serviceMonitor:
  # -- Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator
  enabled: true
  # -- The namespace in which the ServiceMonitor will be created
  namespace: ""
  # -- The interval at which metrics should be scraped
  interval: 30s
  # -- The timeout after which the scrape is ended
  scrapeTimeout: ""
  # -- Metrics RelabelConfigs to apply to samples before scraping.
  relabellings: []
  # -- Metrics RelabelConfigs to apply to samples before ingestion.
  metricRelabelings: []
  # -- Specify honorLabels parameter to add the scrape endpoint
  honorLabels: false
  # -- Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
  additionalLabels: {}
  # -- Labels from the Kubernetes pod to be transferred to the created metrics
  podTargetLabels: []

# -- Optionally specify extra list of additional volumes for the Redis&reg; master pod(s)
extraVolumes: []
# -- Optionally specify extra list of additional volumeMounts for the Redis&reg; master container(s)
extraVolumeMounts: []

## Configure the ingress resource that allows you to access
## Astrolavos handlers
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress resource
  ##
  hostname: Astrolavos.local
  ## @param ingress.path The Path to Astrolavos. You may need to set this to '/*' in order to use this with ALB ingress controllers.
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.ingressClassName Set the ingerssClassName on the ingress record for k8s 1.18+
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.tls Create TLS Secret
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
  ##
  tls: false
  ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## extraHosts:
  ## - name: Astrolavos.local
  ##   path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
  ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## extraTls:
  ## - hosts:
  ##     - Astrolavos.local
  ##   secretName: Astrolavos.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## - name: Astrolavos.local-tls
  ##   key:
  ##   certificate:
  ##
  secrets: []
  ## @param ingress.extraRules The list of additional rules to be added to this ingress record. Evaluated as a template
  ## Useful when looking for additional customization, such as using different backend
  ##
  extraRules: []